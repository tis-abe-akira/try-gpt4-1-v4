openapi: 3.0.3
info:
  title: Customer & Project Management API
  version: 1.0.0
  description: 顧客・プロジェクト管理用REST API
servers:
  - url: http://localhost:8080
paths:
  /api/customers:
    get:
      summary: 顧客一覧取得
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            default: 0
        - in: query
          name: size
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: 顧客一覧
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerResponseDto'
    post:
      summary: 顧客新規作成
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerRequestDto'
      responses:
        '201':
          description: 作成成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerResponseDto'
        '400':
          description: バリデーションエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/customers/{id}:
    get:
      summary: 顧客詳細取得
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 顧客詳細
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerResponseDto'
        '404':
          description: 顧客が存在しない
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      summary: 顧客更新
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerRequestDto'
      responses:
        '200':
          description: 更新成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerResponseDto'
        '400':
          description: バリデーションエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: 顧客が存在しない
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      summary: 顧客削除
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: 削除成功
        '404':
          description: 顧客が存在しない
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/projects:
    get:
      summary: プロジェクト一覧取得
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            default: 0
        - in: query
          name: size
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: プロジェクト一覧
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectResponseDto'
    post:
      summary: プロジェクト新規作成
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectRequestDto'
      responses:
        '201':
          description: 作成成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectResponseDto'
        '400':
          description: バリデーションエラー or customerId不正
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/projects/{id}:
    get:
      summary: プロジェクト詳細取得
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: プロジェクト詳細
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectResponseDto'
        '404':
          description: プロジェクトが存在しない
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      summary: プロジェクト更新
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectRequestDto'
      responses:
        '200':
          description: 更新成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectResponseDto'
        '400':
          description: バリデーションエラー or customerId不正
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: プロジェクトが存在しない
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      summary: プロジェクト削除
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: 削除成功
        '404':
          description: プロジェクトが存在しない
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    CustomerRequestDto:
      type: object
      properties:
        name:
          type: string
          maxLength: 5
        contact:
          type: string
        industry:
          type: string
      required:
        - name
        - contact
        - industry
    CustomerResponseDto:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        contact:
          type: string
        industry:
          type: string
    ProjectRequestDto:
      type: object
      properties:
        customerId:
          type: integer
        departmentName:
          type: string
        projectManager:
          type: string
        projectLeader:
          type: string
        projectRank:
          type: string
          enum: [S, A, B, C, D]
        salesAmount:
          type: integer
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        projectType:
          type: string
          enum: [NEW_DEVELOPMENT, MAINTENANCE, PACKAGE_INTRODUCTION]
      required:
        - customerId
        - departmentName
        - projectManager
        - projectLeader
        - projectRank
        - salesAmount
        - startDate
        - endDate
        - projectType
    ProjectResponseDto:
      type: object
      properties:
        id:
          type: integer
        customerId:
          type: integer
        departmentName:
          type: string
        projectManager:
          type: string
        projectLeader:
          type: string
        projectRank:
          type: string
        salesAmount:
          type: integer
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        projectType:
          type: string
    ErrorResponse:
      type: object
      properties:
        message:
          type: string
        status:
          type: integer
        details:
          type: array
          items:
            type: object
            properties:
              field:
                type: string
              message:
                type: string
